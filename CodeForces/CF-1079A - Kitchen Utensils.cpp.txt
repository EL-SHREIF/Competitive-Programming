#include <bits/stdc++.h>
#include <sstream>
using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef unsigned short	  us;
typedef long long         ll;
const ll OO = 1e8;

const double EPS = (1e-7);
int dcmp(double x, double y) { return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1; }

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<unsigned short>		    vus;
typedef vector<int>						vi;
typedef vector<double>					vd;
typedef vector< vi >					vvi;
typedef vector< vus >					vvus;
typedef vector< vd >					vvd;
typedef vector<string>					vs;
typedef vector<vs>					vvs;
typedef vector<unsigned long long int > vvv;

//ofstream cout;
//cout.open("out.txt");
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie();
    cout.tie();
    int n,k,a;
    cin>>n>>k;
    vi v;
    int count=0;
    map <int , int> mem;
    lp(i,n){
        cin>>a;
        if(mem.count(a)>0)
        {
            mem[a]++;
        } else{
            count ++;
            v.pb(a);
            mem[a]=1;
        }
    }
    vi list;
    lp(i,count)
    {
        list.pb(mem[v[i]]);
    }
    sort(all(list));
    int m,x=list[count-1];
    if(x%k==0)
    {
        m=(x/k);
    }
    else
         m=(x/k)+1;
    int sum=0;
    lp(i,count)
    {
        sum=sum+(m*k)-list[i];
    }
    cout<<sum;
    return 0;
}