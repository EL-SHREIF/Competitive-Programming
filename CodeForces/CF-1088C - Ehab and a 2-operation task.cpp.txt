#include <bits/stdc++.h>
#include <sstream>
using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef unsigned short	  us;
typedef long long         ll;
const ll OO = 1e8;

const double EPS = (1e-7);
int dcmp(double x, double y) { return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1; }

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<unsigned short>		    vus;
typedef vector<int>						vi;
typedef vector<double>					vd;
typedef vector< vi >					vvi;
typedef vector< vus >					vvus;
typedef vector< vd >					vvd;
typedef vector<string>					vs;
typedef vector<vs>					vvs;
typedef vector<unsigned long long int > vvv;

//ofstream cout;
//cout.open("out.txt");


int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin>>n;
    int arr[20001];
    int add[20001];
    lp(i,n)
    {
        cin>>arr[i];
        add[i]=arr[i] % (n+1);
    }
    int old=0;
    int counter=0;
    vi op;
    for(int i=n-1;i>=0;i--)
    {
        if( ((add[i]+old)%(n+1)) !=(i+1))
        {
            counter++;
          op.pb(1);
          op.pb(i+1);
          int num= n+1 - ((add[i]+old)%(n+1)) + (i+1) ;
          op.pb( num );
          old=old+num;
        }
    }

    if(counter!=0) {
        cout<< (counter+1);
        lp(i, counter*3){
            if(i%3==0)
            {
                cout<<endl;
            }
            cout<<op[i]<<" ";
        }
        cout<<endl;
        cout<<2<<" "<<n<<" "<<n+1;
    }
    else
    {
        cout<<counter;
    }
    return 0;
}
