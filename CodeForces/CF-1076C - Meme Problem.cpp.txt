#include <bits/stdc++.h>
#include <sstream>
using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef unsigned short	  us;
typedef long long         ll;
const ll OO = 1e8;

const double EPS = (1e-7);
int dcmp(double x, double y) { return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1; }

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<unsigned short>		    vus;
typedef vector<int>						vi;
typedef vector<double>					vd;
typedef vector< vi >					vvi;
typedef vector< vus >					vvus;
typedef vector< vd >					vvd;
typedef vector<string>					vs;
typedef vector<vs>					vvs;
typedef vector<unsigned long long int > vvv;

//ofstream cout;
//cout.open("out.txt");



int main() {
    ios_base::sync_with_stdio(0);
    cin.tie();
    cout.tie();
    int t;
    cin>>t;
    while(t--) {
        bool x = true;
        float d, a, b;
        cin >> d;
        if ((4 * d) > (d * d)) {
            printf("N\n");
            x = false;
        }
        if (x) {
            if(d==0)
            {
                a=0;
                b=0;
            } else {
                a = d / 2 + sqrt(d * d - 4 * d) / 2;
                b = d / a;
            }
            printf("Y %.9f %.9f \n",a,b);
        }
    }
    return 0;
}











    /*vector<unsigned int > v;
    bool flag,old=0;
    int c=0;
    unsigned int i,low=2,high=sqrt(n);
    while (low <= high)
    {
        flag = 0;
        for(i = 2; i <= low/2; ++i)
        {
            if(low % i == 0)
            {
                flag = 1;
                break;
            }
        }
        if (flag == 0) {
            c++;
            v.pb(low);
        }
            ++low;
    }
    while(1)
    {
        if(n==0)
            break;
        int j=0;
        while(1)
        {
            if(j==c)
            {
                counter++;
                old=1;
                break;
            }
            if(n%v[j]==0)
            {
                counter++;
                n=n-v[j];
                break;
            }
            j++;
        }
        if(old)
            break;
    }
    cout<<counter;
    return 0;
}*/