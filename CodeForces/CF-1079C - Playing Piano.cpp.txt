#include <bits/stdc++.h>
#include <sstream>
using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef unsigned short	  us;
typedef long long         ll;
const ll OO = 1e8;

const double EPS = (1e-7);
int dcmp(double x, double y) { return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1; }

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<unsigned short>		    vus;
typedef vector<int>						vi;
typedef vector<double>					vd;
typedef vector< vi >					vvi;
typedef vector< vus >					vvus;
typedef vector< vd >					vvd;
typedef vector<string>					vs;
typedef vector<vs>					vvs;
typedef vector<unsigned long long int > vvv;
int n;
int a[100005];
int dp [100005][6];
//ofstream cout;
//cout.open("out.txt");
void rec(int pos, int cif) {
    if (pos == 0)
        return;
    rec(pos - 1, dp[pos][cif]);
    cout << cif << ' ';
}

int main() {
    //ifstream cin("tst.in");
    //ofstream out("tst.out");
    //ios_base::sync_with_stdio(0);
    //cin.tie(NULL);
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i <= 5; i++)
        dp[1][i] = 1;

    for (int i = 2; i <= n; i++)
        for (int j = 1; j <= 5; j++)
            for (int k = 1; k <= 5; k++) {
                if (a[i] == a[i - 1]) {
                    if (dp[i - 1][k] && k != j) {
                        dp[i][j] = k;

                    }
                }
                if (a[i] > a[i - 1]) {
                    if (j > k && dp[i - 1][k]) {
                        dp[i][j] = k;

                    }
                }
                if (a[i] < a[i - 1]) {
                    if (j < k && dp[i - 1][k]) {
                        dp[i][j] = k;

                    }
                }
            }

    for (int i = 1; i <= 5; i++)
        if (dp[n][i]) {
            rec(n, i);
            return 0;
        }
    cout << -1;
    return 0;
}
